---node
// <script>
const pagination = {
	data: "collections.songs",
	alias: "song",
	size: 1,
	addAllPagesToCollections: true,
	before: function(paginationData, {languages, streamingServiceNames}) {
		let ret = [];
		let songIndex = 0;
		for(let song of paginationData) {
			for(let lang of languages) {
				let pageData = {
					eleventyPaginationGroupNumber: songIndex,
					language: lang,
					slug: lang !== "en" ? `/${lang}/` : "/",
					urls: {},
				};

				for(let key in song.data) {
					if(key === lang) {
						Object.assign(pageData, song.data[key])
					} else if(key === "urls") {
						for(let serviceKey in song.data.urls) {
							pageData.urls[streamingServiceNames[serviceKey]] = song.data.urls[serviceKey];
						}
					}
				}

				ret.push(pageData);
			}
			songIndex++;
		}

		return ret;
	}
}

const layout = "layout.liquid";

const tags = "songPages";

const permalink = "{{ song.slug }}{{ song.title | slugify }}/";

const eleventyComputed = {
	lang: "{{ song.language }}",
	metadata: {
		title: "Taylor Swift: {{ song.title }}",
		titleHtml: "<a href='{{ song.slug }}'>Taylor Swift</a> <span>{{ song.title }}</span>",
		cta: {
			url: "{{ song.slug }}",
			text: "{{ 'songs' | i18n }}",
		}
	}
};
---
<div class="song-album-page">
{% albumArt song %}
</div>

{%- if song.urls %}
<ul class="demo-inline demo-mb2">
	<li><strong>{{ 'listen' | i18n }}</strong></li>
	{%- for url in song.urls %}
	<li><a href="{{ url[1] }}"><img alt="Favicon for {{ url[1] }}" loading="lazy" decoding="async" src="https://v1.indieweb-avatar.11ty.dev/{{ url[1] | url_encode }}/" width="40" height="40" class="demo-icon demo-icon-rounded">{{ url[0] }}</a></li>
	{%- endfor %}
</ul>
{%- endif %}

<pre>{{ song.lyrics }}</pre>

<hr>
<p><em>{{ "translations" | i18n }} <a href="https://github.com/zachleat-cc/demo-cloudcannon-i18n/issues">{{ "issue" | i18n }}</a></em></p>