---node
// <script>
const layout = "layout.liquid";

const pagination = {
	data: "songs",
	alias: "song",
	size: 1,
	addAllPagesToCollections: true,
	before: function(paginationData, fullData) {
		let ret = [];
		let songIndex = 0;
		for(let songKey in fullData.songs) {
			let song = fullData.songs[songKey];
			for(let lang of Object.keys(song)) {
				if(lang === "metadata") {
					continue;
				}

				ret.push({
					eleventyPaginationGroupNumber: songIndex,
					language: lang,
					slug: lang !== "en" ? `/${lang}/` : "/",
					...song.metadata,
					...song[lang],
				});
			}
			songIndex++;
		}
		return ret;
	}
}

const eleventyComputed = {
	lang: "{{ song.language }}",
	albumArtUrl: "https://v1.opengraph.11ty.dev/{{ song.urls.Spotify | url_encode }}/opengraph/jpeg/",
	metadata: {
		title: "Taylor Swift: {{ song.title }}",
		titleHtml: "<a href='{{ song.slug }}'>Taylor Swift</a> <span>{{ song.title }}</span>",
		cta: {
			url: "{{ song.slug }}",
			text: "{{ 'songs' | i18n }}",
		}
	}
};

const tags = "songs";

const permalink = "{{ song.slug }}{{ song.title | slugify }}/";
---
<div class="song-album-page">
{% albumArt song.title, albumArtUrl %}
</div>

{%- if song.urls %}
<ul class="demo-inline demo-mb2">
	<li><strong>{{ 'listen' | i18n }}</strong></li>
	{%- for url in song.urls %}
	<li><a href="{{ url[1] }}"><img alt="Favicon for {{ url[1] }}" loading="lazy" decoding="async" src="https://v1.indieweb-avatar.11ty.dev/{{ url[1] | url_encode }}/" width="40" height="40" class="demo-icon demo-icon-rounded">{{ url[0] }}</a></li>
	{%- endfor %}
</ul>
{%- endif %}

<pre>{{ song.lyrics }}</pre>

<hr>
<p><em>{{ "translations" | i18n }} <a href="https://github.com/zachleat-cc/demo-cloudcannon-i18n/issues">{{ "issue" | i18n }}</a></em></p>